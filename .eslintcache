[{"/Users/tran/Documents/react_rides_deploy/src/reportWebVitals.js":"1","/Users/tran/Documents/react_rides_deploy/src/components/main/Header.js":"2","/Users/tran/Documents/react_rides_deploy/src/components/view/viewRides.js":"3","/Users/tran/Documents/react_rides_deploy/src/components/admin/Car.js":"4","/Users/tran/Documents/react_rides_deploy/src/api/UserServices.js":"5","/Users/tran/Documents/react_rides_deploy/src/components/car/CarList.js":"6","/Users/tran/Documents/react_rides_deploy/src/components/car/Car.js":"7","/Users/tran/Documents/react_rides_deploy/src/api/CarServices.js":"8","/Users/tran/Documents/react_rides_deploy/src/components/register/Login.js":"9","/Users/tran/Documents/react_rides_deploy/src/components/register/Register.js":"10","/Users/tran/Documents/react_rides_deploy/src/Functions.js":"11","/Users/tran/Documents/react_rides_deploy/src/App.js":"12","/Users/tran/Documents/react_rides_deploy/src/components/profile/Profile.js":"13","/Users/tran/Documents/react_rides_deploy/src/components/admin/Admin.js":"14","/Users/tran/Documents/react_rides_deploy/src/components/admin/Sidebar.js":"15"},{"size":362,"mtime":1606276678657,"results":"16","hashOfConfig":"17"},{"size":984,"mtime":1606276678650,"results":"18","hashOfConfig":"17"},{"size":1032,"mtime":1606276678653,"results":"19","hashOfConfig":"17"},{"size":2507,"mtime":1606276678647,"results":"20","hashOfConfig":"17"},{"size":1714,"mtime":1606284732654,"results":"21","hashOfConfig":"17"},{"size":1098,"mtime":1606276678649,"results":"22","hashOfConfig":"17"},{"size":5599,"mtime":1606276678649,"results":"23","hashOfConfig":"17"},{"size":1564,"mtime":1606284715704,"results":"24","hashOfConfig":"17"},{"size":3741,"mtime":1606276678652,"results":"25","hashOfConfig":"17"},{"size":5860,"mtime":1606276678652,"results":"26","hashOfConfig":"17"},{"size":6664,"mtime":1606276678645,"results":"27","hashOfConfig":"17"},{"size":1551,"mtime":1606276678644,"results":"28","hashOfConfig":"17"},{"size":925,"mtime":1606276678651,"results":"29","hashOfConfig":"17"},{"size":6416,"mtime":1606276678647,"results":"30","hashOfConfig":"17"},{"size":2424,"mtime":1606276678648,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"svh2bs",{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"38"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"38"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"38"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/tran/Documents/react_rides_deploy/src/reportWebVitals.js",[],["71","72"],"/Users/tran/Documents/react_rides_deploy/src/components/main/Header.js",["73"],"import React, { useState, useEffect } from \"react\";\nimport { NavLink, Redirect } from \"react-router-dom\";\nimport \"./styles.css\";\n\nexport default function Header () {\n    const [loggedIn, setLoggedIn] = useState(true);\n\n    function handleLogOut() {\n        localStorage.setItem(\"logged_in\", false);\n    }\n\n    useEffect(() => {\n        if (localStorage.getItem(\"logged_in\") != \"true\") {\n            setLoggedIn(false);\n        }\n    }, [])\n\n    return (\n        <div className=\"header\">\n            {!loggedIn ? <Redirect to=\"/login\"/> : null}\n            <h1 className=\"logoText\">\n                Lighthouse Rides\n            </h1>\n\n            <ul className=\"navBarList\">\n                <NavLink to=\"/admin\" className=\"navBarOption\">Manage Rides</NavLink>\n                <NavLink to=\"/view\" className=\"navBarOption\">View Rides</NavLink>\n                <NavLink to=\"/login\" className=\"navBarOption\" onClick={handleLogOut}>Log Out</NavLink>\n            </ul>\n        </div>\n    )\n}",["74","75"],"/Users/tran/Documents/react_rides_deploy/src/components/view/viewRides.js",["76"],"import React, { useState, useEffect } from \"react\";\nimport CarList from \"../car/CarList\";\nimport Car from \"../admin/Car\"\nimport { getAllCars } from \"../../api/CarServices\";\n\nimport \"./styles.css\";\n\nexport default function ViewRides () {\n    // getAllUsers().then((rsp) => {\n    //     setUsers(rsp);\n    // });\n\n    const emptyJSON = {\n        \"id\": null,\n        \"name\": \"None\",\n        \"phone\": \"None\",\n        \"pickupLocation\": null,\n        \"assigned\": false,\n        \"canDrive\": false,\n    }\n\n    let initialCars = [\n        new Car(0, [\"EVK\"], \"8:20AM\", emptyJSON, [emptyJSON, emptyJSON, emptyJSON, emptyJSON]),\n        // new Car(1, [\"Village\"], \"8:20AM\", initialUsers[4], initialUsers.slice(0, 4))\n    ]\n\n    const [cars, setCars] = useState(initialCars);\n\n    useEffect(() => {\n        console.log(cars);\n\n        getAllCars().then((rsp) => {\n            setCars(rsp);\n        })\n    }, [])\n\n    return (\n        <div className=\"\">\n            <CarList cars={cars} setCars={setCars} viewOnly={true}/>\n        </div>\n    )\n}","/Users/tran/Documents/react_rides_deploy/src/components/admin/Car.js",[],["77","78"],"/Users/tran/Documents/react_rides_deploy/src/api/UserServices.js",[],["79","80"],"/Users/tran/Documents/react_rides_deploy/src/components/car/CarList.js",[],"/Users/tran/Documents/react_rides_deploy/src/components/car/Car.js",["81"],"import React, { useEffect, useState } from \"react\";\nimport _ from \"lodash\";\nimport \"./styles.css\";\n\nexport default function Car ({ cars, setCars, index, draggedItem, deleteCar, assign, deassign, users, showModal, dropDriver, viewOnly }) {\n    let car = cars[index];\n    const [over, setOver] = useState(false);\n\n\n    function removeDriver() {\n        if (car.driver.id === null) {\n            return;\n        }\n        let newCars = cars.map((car, j) => {\n            if (index === j) {\n                console.log(j);\n                let newCar = _.cloneDeep(car);\n                newCar.driver.reset();\n                return newCar;\n            }\n            return car;\n        });\n        deassign(cars[index].driver);\n        setCars(newCars);\n    }\n\n    function handleDriverDrop(e) {\n        if (car.driver.name !== \"None\") {\n            return;\n        }\n\n        if (!draggedItem.canDrive) {\n            showModal(draggedItem, index);\n            return;\n        }\n        dropDriver(index);\n    }\n\n    \n\n    function handleDriverOnDragOver(e) {\n        e.preventDefault();\n        e.stopPropagation();\n    }\n\n\n    function handleDriverDragLeave(e) {\n        // e.preventDefault();\n        // e.stopPropagation();\n        setOver(false);\n    }\n\n    function handleDeleteCar(index) {\n        deassign(car.driver);\n        deassign(car.passengers, true);\n        deleteCar(index);\n    }\n\n\n\n    useEffect(() => {\n        car = cars[index];\n    }, [index]);\n\n\n\n    return (\n        <div className=\"car\" > \n            <div className=\"relative\">\n                <div className={over ? \"carHeader over\" : \"carHeader\"} >\n                    <div className=\"pickupLocation\"> {car.getPickupLocations()} </div>\n                    <div className=\"pickupTime\"> {car.pickupTime} </div>\n\n                    <h3 className=\"driverName\"> {car.driver.name} </h3>\n                    <h4 className=\"driverPhone\">{car.driver.phone}</h4>\n\n                </div>\n                <div className={`hoverbox ${viewOnly ? \"view-only\" : \"\"}`}\n                        onClick={removeDriver}\n                        onDrop={handleDriverDrop} \n                        onDragOver={handleDriverOnDragOver} \n                        onDragLeave={handleDriverDragLeave}\n                        onDragExit={handleDriverDragLeave}>\n\n                    <button className=\"removeButton\">\n                        <i className=\"material-icons remove-icon\">close</i>\n                    </button>\n                </div>\n\n            </div>\n            \n            \n                \n\n            <div className=\"passengers\">\n                { car.passengers.map((passenger, passengerIndex) => {\n                    return <Passenger \n                                key={passengerIndex}\n                                passenger={passenger} \n                                draggedItem={draggedItem} \n                                cars={cars} \n                                setCars={setCars} \n                                passengerIndex={passengerIndex}\n                                carIndex={index}\n                                assign={assign}\n                                deassign={deassign}\n                                viewOnly={viewOnly}\n                            />\n                })}\n            </div>\n\n            <button className={`btn delete-button ${viewOnly ? \"view-only\" : \"\"}`} onClick={() => { handleDeleteCar(index) }}> Delete </button>\n        </div>\n    )\n}\n\nfunction Passenger ({ passenger, draggedItem, cars, setCars, passengerIndex, carIndex, assign, deassign, viewOnly }) {\n\n    function handlePassengerDrop(e) {\n        if (passenger.assigned === true) {\n            return;\n        }\n\n        let newCars = cars.map((car, i) => {\n            if (i === carIndex) {\n                cars[i].passengers[passengerIndex] = draggedItem;\n                cars[i].addPickupLocations(draggedItem.pickupLocation);\n            }\n            return car;\n        })\n        setCars(newCars);\n        assign(draggedItem);\n        e.preventDefault();\n        e.stopPropagation();\n    }\n\n    function handlePassengerOnDragOver(e) {\n        e.preventDefault();\n        e.stopPropagation();\n    }\n\n    function handlePassengerDragLeave(e) {\n        // e.preventDefault();\n        // e.stopPropagation();\n        \n        // console.log(over ? \"carHeader over\" : \"carHeader\")\n    }\n\n    function handleRemovePassenger() {\n        let newCars = cars.map((car, j) => {\n            if (carIndex === j) {\n                let newCar = _.cloneDeep(car);\n                console.log(newCar);\n                newCar.removePassenger(passengerIndex);\n                return newCar;\n            }\n            return car;\n        })\n        setCars(newCars);\n        deassign(passenger);\n    }\n\n    return (\n        <div className=\"relative\">\n            <div className=\"passengerEntry\" \n                    onDrop={handlePassengerDrop} \n                    onDragOver={handlePassengerOnDragOver} \n                    onDragLeave={handlePassengerDragLeave}\n                    onDragExit={handlePassengerDragLeave}>\n                <div className=\"passengerEntryContents\">\n                    <div className=\"passengerName\">{passenger.name}</div>\n                    <div className=\"passengerPhone\">{passenger.phone}</div>\n                </div>\n\n                <div className={`passengerEntryActions ${viewOnly ? \"view-only\" : \"\"}`} onClick={handleRemovePassenger}>\n                    <i className=\"material-icons remove-icon\">close</i>\n                </div>\n            </div>\n        </div>\n        \n    )\n}","/Users/tran/Documents/react_rides_deploy/src/api/CarServices.js",[],"/Users/tran/Documents/react_rides_deploy/src/components/register/Login.js",[],"/Users/tran/Documents/react_rides_deploy/src/components/register/Register.js",["82","83"],"import React, { useState, useEffect } from \"react\";\nimport { Link, Redirect, useHistory } from \"react-router-dom\";\nimport User from \"../admin/User\";\nimport { addUser } from \"../../api/UserServices\";\nimport { Alert } from 'react-bootstrap';\nimport \"./styles.css\";\n\nexport default function Register () {\n    const [name, setName] = useState(\"\"); \n    const [email, setEmail] = useState(\"\");\n    const [phone, setPhone] = useState(\"\");\n    const history = useHistory();\n\n    const [nameError, setNameError] = useState(false);\n    const [emailError, setEmailError] = useState(false);\n    const [phoneError, setPhoneError] = useState(false);\n\n    const [pickupLocation, setPickupLocation] = useState(\"EVK\");\n    const [canDrive, setCanDrive] = useState(false);\n\n    function handleNameChange(event) {\n        setName(event.target.value);\n    }\n\n    function handleEmailChange(event) {\n        setEmail(event.target.value);\n    }\n\n    function handlePhoneChange(event) {\n        setPhone(event.target.value);\n    }\n\n    function handlePickupLocationChange(event) {\n        console.log(event.target.value);\n        setPickupLocation(event.target.value);\n    }\n\n    function handleCanDriveChange(event) {\n        setCanDrive(event.target.checked);\n    }\n\n    function handleSubmit(e) {\n        let valid = true;\n\n        // \n        if (name.trim().length === 0) {\n            // setName\n            setNameError(true);\n            setTimeout(() => { setNameError(false) }, 3000);\n            valid = false;\n        }\n\n        if (email.trim().length === 0 || !email.includes('@')) {\n            // setName\n            setEmailError(true);\n            setTimeout(() => { setEmailError(false) }, 3000);\n            valid = false;\n        }\n\n        if (phone.trim().length === 0) {\n            // setName\n            setPhoneError(true);\n            setTimeout(() => { setPhoneError(false) }, 3000);\n            valid = false;\n        }\n\n\n\n        if (valid) {\n            let newUser = new User({\n                \"name\": name,\n                \"phone\": phone,\n                \"email\": email,\n                \"pickupLocation\": pickupLocation,\n                \"assigned\": false,\n                \"canDrive\": canDrive,\n            })\n            addUser(newUser).then((rsp) => {\n                localStorage.setItem(\"logged_in\", true);\n                history.push(\"/admin\");\n            });\n        }\n        e.preventDefault();\n        \n    }\n\n    useEffect(() => {\n        if (localStorage.getItem(\"logged_in\") === \"true\") {\n            history.push(\"/admin\");\n        }\n    }, [])\n\n    return (\n        <div id=\"register\">\n\n\n            <h1> Lighthouse Rides </h1>\n            <form>\n                <div className=\"center\">\n                    <div className=\"form-group\">\n                        <label htmlFor=\"name\">Name</label>\n                        <input type=\"name\" className=\"form-control\" value={name} onChange={handleNameChange} id=\"name\" placeholder=\"Enter your name...\"/>\n                        { nameError && \n                            <Alert className=\"alert-box\" variant=\"danger\">\n                                Please enter a name.\n                            </Alert>\n                        }\n                            \n                    </div>\n\n                    \n\n                    <div className=\"form-group\">\n                        <label htmlFor=\"name\">Email</label>\n                        <input type=\"email\" className=\"form-control\" value={email} onChange={handleEmailChange} id=\"email\" placeholder=\"Enter your email...\"/>\n                        { emailError && \n                            <Alert className=\"alert-box\" variant=\"danger\">\n                                Please enter a valid email.\n                            </Alert>\n                        }\n                    \n                    </div>\n\n                    <div className=\"form-group\">\n                        <label htmlFor=\"name\">Phone</label>\n                        <input type=\"text\" className=\"form-control\" value={phone} onChange={handlePhoneChange} id=\"phone\" placeholder=\"Enter your phone...\"/>\n                        { phoneError && \n                            <Alert className=\"alert-box\" variant=\"danger\">\n                                Please only enter digits..\n                            </Alert>\n                        }\n                    \n                    </div>\n\n                    <div className=\"form-group\">\n                        <label htmlFor=\"pickupLocations\">Pickup Locations</label>\n                        <select className=\"form-control\" id=\"pickupLocations\" onChange={handlePickupLocationChange}>\n                            <option>EVK</option>\n                            <option>Village</option>\n                            <option>Parkside</option>\n                        </select>\n                    </div>\n\n                    <div className=\"form-group\">\n                        <div class=\"form-check\">\n                            <input class=\"form-check-input\" type=\"checkbox\" onChange={handleCanDriveChange} id=\"defaultCheck1\"></input>\n                            <label class=\"form-check-label\" htmlFor=\"defaultCheck1\" > Are you able to drive? </label>\n                        </div>\n                    </div>\n\n                    \n                </div>\n                    \n                <div className=\"submit-row\">    \n                    <button className=\"btn btn-success\" id=\"submit-btn\" onClick={handleSubmit}> \n                        <Link to=\"/admin\" className=\"navLink\">\n                            Register\n                        </Link>\n                    </button>\n                </div>\n                <small id=\"login\" className=\"form-text text-muted\">Already have an account? Login <a href=\"./login\">here.</a></small>\n            </form>\n            \n        </div>\n    )\n}","/Users/tran/Documents/react_rides_deploy/src/Functions.js",[],"/Users/tran/Documents/react_rides_deploy/src/App.js",[],"/Users/tran/Documents/react_rides_deploy/src/components/profile/Profile.js",[],"/Users/tran/Documents/react_rides_deploy/src/components/admin/Admin.js",["84"],"import React, { useState, useEffect } from \"react\";\nimport _ from \"lodash\";\nimport CarList from \"../car/CarList\";\nimport Sidebar from \"./Sidebar\";\nimport Car from \"./Car\";\nimport User from \"./User\";\nimport { getAllUsers } from \"../../api/UserServices\";\nimport { updateCars } from \"../../api/CarServices\";\nimport { Modal, Button } from 'react-bootstrap';\nimport { ToastContainer, toast } from \"react-toastify\";\nimport { autogenerate } from \"../../Functions\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport \"./styles.css\";\n\nexport default function Admin ({ text }) {\n    const [draggedItem, setDraggedItem] = useState(0);\n    const [cars, setCars] = useState([]);\n    const [users, setUsers] = useState([]);\n    const [modalDisplay, setModalDisplay] = useState(\"\");\n\n    useEffect(() => {\n        getAllUsers().then((rsp) => {\n            setUsers(rsp);\n            \n        });\n\n        \n    }, []);\n\n    function addCar() {\n        const emptyJSON = {\n            \"id\": null,\n            \"name\": \"None\",\n            \"phone\": \"None\",\n            \"pickupLocation\": null,\n            \"assigned\": false,\n            \"canDrive\": false,\n        }\n\n        const emptyUser = new User(emptyJSON);\n        const emptyCar = [emptyUser, emptyUser, emptyUser, emptyUser];\n        setCars(cars.concat(new Car(cars.length, [], \"Time\", emptyJSON, emptyCar)));\n    }\n\n    function resetCars() {\n        setCars([]);\n        let newUsers = users.map((user) => {\n            let newUser = _.cloneDeep(user);\n            newUser.assigned = false;\n            return newUser;\n        });\n        setUsers(newUsers);\n    }\n\n    function submitCars() {\n        updateCars(cars).then((rsp) => {\n            toast('Cars have been updated!', {\n                position: \"top-right\",\n                autoClose: 5000,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true,\n                progress: undefined,\n                });\n        });\n    }\n\n    function handleAutogenerate() {\n        console.log(\"auto\");\n        autogenerate(users, setCars, assign);\n    }\n\n    function assign(assignedUser) {\n        let newUsers = users.map((user) => {\n            if (user === assignedUser) {\n                user.assigned = true;\n                return user;\n            }\n            return user;\n        });\n        setUsers(newUsers);\n    }\n\n    function deassign(assigned, multiple=false) {\n        if (!multiple) {\n            if (assigned.id === null) {\n                return;\n            }\n\n            let newUsers = users.map((user, index) => {\n                if (user.id === assigned.id) {\n                    let newUser = _.cloneDeep(user);\n                    newUser.assigned = false;\n                    return newUser;\n                }\n                return user;\n            });\n            setUsers(newUsers);\n        }\n        else {\n            let newUsers = users.map((user) => {\n                const found = assigned.find(p => p === user);\n                if (found !== undefined) {\n                    let newUser = _.cloneDeep(user);\n                    newUser.assigned = false;\n                    return newUser;\n                }\n                return user;\n            })\n            setUsers(newUsers);\n        }\n\n        \n        \n    }\n\n    \n    function handleTest() {\n        // getAllUsers().then((rsp) => {\n        //     setUsers(rsp);\n        // });\n    }\n\n    const [show, setShow] = useState(false);\n    const [confirmModalIndex, setConfirmModalIndex] = useState(null);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    function showModal(user, index) {\n        handleShow();\n        setConfirmModalIndex(index);\n        setModalDisplay(user.name + \" \");\n    }\n    \n    function handleModalConfirm() {\n        dropDriver(confirmModalIndex);\n        handleClose();\n    }\n\n\n    return (\n        <div>\n            <div className=\"buttonRow\">\n                <button className=\"btn btn-secondary\" onClick={addCar}>Add Car</button> \n                <button className=\"btn btn-secondary\" onClick={resetCars}>Reset</button> \n                <button className=\"btn btn-secondary\" onClick={submitCars}>Submit Cars</button> \n                <button className=\"btn btn-secondary\" onClick={handleAutogenerate}>Autogenerate</button> \n            </div>\n\n            <ToastContainer\n                position=\"top-right\"\n                autoClose={5000}\n                hideProgressBar={false}\n                newestOnTop\n                closeOnClick\n                rtl={false}\n                pauseOnFocusLoss\n                draggable\n                pauseOnHover\n                />\n\n            \n            <Modal show={show} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title> </Modal.Title>\n                </Modal.Header>\n                <Modal.Body><strong>{modalDisplay} </strong>says that they are not a driver. Are you sure you want to make them drive? </Modal.Body>\n                <Modal.Footer>\n                <Button variant=\"secondary\" onClick={handleClose}>\n                    Close\n                </Button>\n                <Button variant=\"success\" onClick={handleModalConfirm}>\n                    Yes\n                </Button>\n                </Modal.Footer>\n            </Modal>\n\n\n            <div id=\"main\">\n                <Sidebar users={users} setDraggedItem={setDraggedItem} setUsers={setUsers}/>\n                <CarList cars={cars} \n                            setCars={setCars} \n                            draggedItem={draggedItem} \n                            assign={assign} \n                            deassign={deassign} \n                            users={users} \n                            showModal={showModal} \n                            dropDriver={dropDriver}/>\n            </div>\n                \n        </div>\n    )\n\n    function dropDriver(index) {\n        // Update corresponding car\n        console.log(index);\n        let newCars = cars.map((car, j) => {\n            if (index === j) {\n                let newCar = _.cloneDeep(car);\n                newCar.driver = draggedItem;\n                newCar.driver.assigned = true;\n                return newCar;\n            }\n            return car;\n        })\n        setCars(newCars);\n        assign(draggedItem);\n    }\n}\n\n\n","/Users/tran/Documents/react_rides_deploy/src/components/admin/Sidebar.js",[],{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","severity":1,"message":"90","line":13,"column":47,"nodeType":"91","messageId":"92","endLine":13,"endColumn":49},{"ruleId":"85","replacedBy":"93"},{"ruleId":"87","replacedBy":"94"},{"ruleId":"95","severity":1,"message":"96","line":35,"column":8,"nodeType":"97","endLine":35,"endColumn":10,"suggestions":"98"},{"ruleId":"85","replacedBy":"99"},{"ruleId":"87","replacedBy":"100"},{"ruleId":"85","replacedBy":"101"},{"ruleId":"87","replacedBy":"102"},{"ruleId":"95","severity":1,"message":"103","line":62,"column":15,"nodeType":"104","endLine":62,"endColumn":26},{"ruleId":"105","severity":1,"message":"106","line":2,"column":16,"nodeType":"107","messageId":"108","endLine":2,"endColumn":24},{"ruleId":"95","severity":1,"message":"109","line":91,"column":8,"nodeType":"97","endLine":91,"endColumn":10,"suggestions":"110"},{"ruleId":"105","severity":1,"message":"111","line":119,"column":14,"nodeType":"107","messageId":"108","endLine":119,"endColumn":24},"no-native-reassign",["112"],"no-negated-in-lhs",["113"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected",["112"],["113"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'cars'. Either include it or remove the dependency array.","ArrayExpression",["114"],["112"],["113"],["112"],["113"],"Assignments to the 'car' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","MemberExpression","no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["115"],"'handleTest' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"116","fix":"117"},{"desc":"118","fix":"119"},"Update the dependencies array to be: [cars]",{"range":"120","text":"121"},"Update the dependencies array to be: [history]",{"range":"122","text":"123"},[896,898],"[cars]",[2568,2570],"[history]"]